{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "continuous-assembly",
   "metadata": {},
   "source": [
    "# Data Cleaning "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "exterior-hours",
   "metadata": {},
   "outputs": [],
   "source": [
    " import pandas as pd "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "instrumental-elder",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "drg= pd.read_csv('DRG Information.csv' )  # reading the csv file. There is no missing data in this file so decided to use as it is "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "revised-barrier",
   "metadata": {},
   "outputs": [],
   "source": [
    "eoc= pd.read_csv('Episodes of Care.csv' ) # reading the csv file\n",
    "eoc['AVERAGE_AMOUNT_PAID_BY_MEDICARE_FOR_HOSPICE'].fillna('0',inplace=True)# replace the missing values by 0 \n",
    "eoc['AVERAGE_LENGTH_OF_STAY_FOR_HOME_HEALTH'].fillna('0',inplace = True)\n",
    "eoc['AVERAGE_LENGTH_OF_STAY_FOR_HOSPICE'].fillna('0',inplace=True) \n",
    "eoc.to_csv('Episodes of Care_out.csv',index=False) # Export the clean csv file "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "oriental-stopping",
   "metadata": {},
   "outputs": [],
   "source": [
    "hs= pd.read_csv('Health Systems1.csv' ) #reading the csv file \n",
    "hs=hs.drop(['ADDRESS_LINE_2'], axis = 1) # Drop this variable because it has lot of missing values \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "numerical-radio",
   "metadata": {},
   "outputs": [],
   "source": [
    "hs['PHONE'].fillna('0000000000',inplace=True) # Relacing missing values\n",
    "hs['WEBSITE'].fillna('NA',inplace=True)\n",
    "hs['ADDRESS_LINE_1'].fillna('NA',inplace=True)\n",
    "hs['CITY'].fillna('NA',inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "operating-output",
   "metadata": {},
   "outputs": [],
   "source": [
    "f= lambda x: x.mode() \n",
    "hs=hs.fillna(hs.groupby('CITY').transform(f))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "laughing-lambda",
   "metadata": {},
   "outputs": [],
   "source": [
    "hs['ZIP'].fillna('00000',inplace=True)\n",
    "hs['STATE'].fillna('NA',inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "hindu-environment",
   "metadata": {},
   "outputs": [],
   "source": [
    "hs.to_csv('Health Systems1_out.csv',index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "sorted-absorption",
   "metadata": {},
   "outputs": [],
   "source": [
    "hb= pd.read_csv('Hospital Beds.csv' ) # reading the csv file \n",
    "hb.fillna(0,inplace=True)# replacing the missing values by 0 \n",
    "hb.to_csv('Hospital Beds_out.csv',index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "committed-oriental",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "latin-rachel",
   "metadata": {},
   "outputs": [],
   "source": [
    "hd= pd.read_csv('Hospital Discharges.csv' ) # read csv file\n",
    "hd.fillna(0,inplace=True)\n",
    "hd.to_csv('Hospital Discharges_out.csv',index=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "incorrect-priest",
   "metadata": {},
   "outputs": [],
   "source": [
    "hr= pd.read_csv('Hospital Revenue.csv' ) # read csv file\n",
    "hr.fillna(0,inplace=True)\n",
    "hr.to_csv('Hospital Revenue_out.csv',index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "above-lewis",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "proud-gamma",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 6535 entries, 0 to 6534\n",
      "Data columns (total 6 columns):\n",
      " #   Column                                        Non-Null Count  Dtype \n",
      "---  ------                                        --------------  ----- \n",
      " 0   HOSPITAL_HEALTH_SYSTEM_HOSPITAL_HOSPITAL_KEY  6535 non-null   int64 \n",
      " 1   TORCH_HEALTH_SYSTEM_ID                        6535 non-null   int64 \n",
      " 2   TORCH_HOSPITAL_ID                             6535 non-null   int64 \n",
      " 3   TYPE                                          6535 non-null   object\n",
      " 4   EFFECTIVE_BEGIN                               6535 non-null   object\n",
      " 5   EFFECTIVE_END                                 400 non-null    object\n",
      "dtypes: int64(3), object(3)\n",
      "memory usage: 306.5+ KB\n"
     ]
    }
   ],
   "source": [
    "hhsa= pd.read_csv('Hospital Health System Affiliations.csv' ) # read csv file\n",
    "hhsa=hhsa.drop(['EFFECTIVE_END'], axis = 1)\n",
    "hhsa.to_csv('Hospital Health System Affiliations_out.csv',index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "driving-bachelor",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "friendly-teacher",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 20988 entries, 0 to 20987\n",
      "Data columns (total 9 columns):\n",
      " #   Column                                            Non-Null Count  Dtype  \n",
      "---  ------                                            --------------  -----  \n",
      " 0   VALUE_BASED_PURCHASING_FACT_KEY                   20988 non-null  int64  \n",
      " 1   HOSPITAL_DIM_KEY                                  20988 non-null  int64  \n",
      " 2   YEAR_KEY                                          20988 non-null  int64  \n",
      " 3   WEIGHTED_CLINICAL_PROCESS_OF_CARE_DOMAIN_SCORE    17195 non-null  float64\n",
      " 4   WEIGHTED_PATIENT_EXPERIENCE_OF_CARE_DOMAIN_SCORE  20251 non-null  float64\n",
      " 5   WEIGHTED_EFFICIENCY_DOMAIN_SCORE                  17389 non-null  float64\n",
      " 6   TOTAL_PERFORMANCE_SCORE                           20394 non-null  float64\n",
      " 7   ACTUAL_FY_HOSPITAL_VBP_ADJUSTMENT_FACTOR          14621 non-null  float64\n",
      " 8   ESTIMATED_VBP_ADJUSTMENT_DOLLAR_VALUE             13981 non-null  float64\n",
      "dtypes: float64(6), int64(3)\n",
      "memory usage: 1.4 MB\n"
     ]
    }
   ],
   "source": [
    "hvp= pd.read_csv('Hospital Value-based Purchasing Program Data.csv' ) # reading the csv file "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "arabic-telescope",
   "metadata": {},
   "outputs": [],
   "source": [
    "f1= lambda x: x.median()  # to replace missing values for all colums based on hospital Dim key\n",
    "hvp=hvp.fillna(hvp.groupby('HOSPITAL_DIM_KEY').transform(f1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "sixth-american",
   "metadata": {},
   "outputs": [],
   "source": [
    "hvp.fillna(0,inplace=True)\n",
    "hvp.to_csv('Hospital Value-based Purchasing Program Data_out.csv',index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "bright-intention",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "increased-simulation",
   "metadata": {},
   "outputs": [],
   "source": [
    "hh= pd.read_csv('Hospitals.csv' ) #"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "experimental-vacation",
   "metadata": {},
   "outputs": [],
   "source": [
    "hh=hh.drop(['ADDRESS_LINE_2','CLOSED_DATE','FORMERLY_KNOWN_AS','DEACTIVATED_0_1_FLAG',\n",
    "           'CLOSED_0_1_FLAG','CLOSED_DATE','PRIMARY_EHR_PRODUCT_NAME','PRIMARY_EHR_PRODUCT_VERSION',\n",
    "           'PRIMARY_EHR_VENDOR_NAME','SUPPRESSION_0_1_FLAG','PHONE','COUNTY_NAME','CITY','ZIP'], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "jewish-batman",
   "metadata": {},
   "outputs": [],
   "source": [
    "hh['HOSPITAL_OWNERSHIP'] = hh['HOSPITAL_OWNERSHIP'].fillna('Private (Not for Profit)')\n",
    "hh['HOSPITAL_TYPE'] = hh['HOSPITAL_TYPE'].fillna('Short Term')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "decent-investigator",
   "metadata": {},
   "outputs": [],
   "source": [
    "f2= lambda x: x.mode()  # to replace missing values for all colums based on hospital Name\n",
    "hh=hh.fillna(hh.groupby('NAME').transform(f2))\n",
    "hh['STATE'] = hh['STATE'].fillna('TX')\n",
    "hh['ADDRESS_LINE_1'] = hh['ADDRESS_LINE_1'].fillna('100 Hospital Drive')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "entertaining-graham",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "clear-brain",
   "metadata": {},
   "outputs": [],
   "source": [
    "hh.to_csv('Hospitals3_out.csv',index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "indirect-bronze",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
